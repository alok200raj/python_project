# Form implementation generated from reading ui file 'emp_ui.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMainWindow, QTableWidgetItem, QApplication
import pyodbc


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1061, 768)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(70, 20, 941, 61))
        self.frame.setStyleSheet("background-color: rgb(85, 170, 255);\n"
"border-color: rgb(60, 229, 231);")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.title_label = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.title_label.setFont(font)
        self.title_label.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.title_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.title_label.setObjectName("title_label")
        self.horizontalLayout.addWidget(self.title_label)
        self.info_frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.info_frame.setGeometry(QtCore.QRect(60, 100, 961, 171))
        self.info_frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.info_frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.info_frame.setObjectName("info_frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.info_frame)
        self.gridLayout_3.setContentsMargins(30, 20, 30, 20)
        self.gridLayout_3.setSpacing(20)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setHorizontalSpacing(12)
        self.gridLayout.setVerticalSpacing(17)
        self.gridLayout.setObjectName("gridLayout")
        self.label_8 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_8.setEnabled(False)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 0, 0, 1, 1)
        self.id = QtWidgets.QLineEdit(parent=self.info_frame)
        self.id.setReadOnly(True)
        self.id.setObjectName("id")
        self.gridLayout.addWidget(self.id, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.name = QtWidgets.QLineEdit(parent=self.info_frame)
        self.name.setObjectName("name")
        self.gridLayout.addWidget(self.name, 1, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)
        self.doj = QtWidgets.QDateEdit(parent=self.info_frame)
        self.doj.setObjectName("doj")
        self.gridLayout.addWidget(self.doj, 2, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 3, 0, 1, 1)
        self.gender = QtWidgets.QComboBox(parent=self.info_frame)
        self.gender.setObjectName("gender")
        self.gender.addItem("")
        self.gender.setItemText(0, "")
        self.gender.addItem("")
        self.gender.addItem("")
        self.gender.addItem("")
        self.gridLayout.addWidget(self.gender, 3, 1, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setHorizontalSpacing(12)
        self.gridLayout_2.setVerticalSpacing(15)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_5 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 0, 0, 1, 1)
        self.mobile = QtWidgets.QLineEdit(parent=self.info_frame)
        self.mobile.setObjectName("mobile")
        self.gridLayout.addWidget(self.mobile, 0, 1, 1, 1)
        self.mobile = QtWidgets.QLineEdit(parent=self.info_frame)
        self.mobile.setObjectName("mobile")
        self.gridLayout_2.addWidget(self.mobile, 0, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 1, 0, 1, 1)
        self.designation = QtWidgets.QLineEdit(parent=self.info_frame)
        self.designation.setObjectName("designation")
        self.gridLayout_2.addWidget(self.designation, 1, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(parent=self.info_frame)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 2, 0, 1, 1)
        self.department = QtWidgets.QComboBox(parent=self.info_frame)
        self.department.setObjectName("department")
        self.department.addItem("")
        self.department.setItemText(0, "")
        self.department.addItem("")
        self.department.addItem("")
        self.department.addItem("")
        self.department.addItem("")
        self.gridLayout_2.addWidget(self.department, 2, 1, 1, 1)
       
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 1, 1, 1)
        self.functio_frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.functio_frame.setGeometry(QtCore.QRect(60, 280, 961, 51))
        self.functio_frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.functio_frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.functio_frame.setObjectName("functio_frame")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.functio_frame)
        self.gridLayout_4.setContentsMargins(30, -1, 30, -1)
        self.gridLayout_4.setHorizontalSpacing(10)
        self.gridLayout_4.setVerticalSpacing(15)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.add_btn = QtWidgets.QPushButton(parent=self.functio_frame)
        self.add_btn.setStyleSheet("background-color: rgb(0, 0, 255);")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/add-button-svgrepo-com.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.add_btn.setIcon(icon)
        self.add_btn.setObjectName("add_btn")
        self.gridLayout_4.addWidget(self.add_btn, 0, 0, 1, 1)
        self.update_btn = QtWidgets.QPushButton(parent=self.functio_frame)
        self.update_btn.setStyleSheet("background-color: rgb(0, 255, 127);")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("img/update-business-user-svgrepo-com.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.update_btn.setIcon(icon1)
        self.update_btn.setObjectName("update_btn")
        self.gridLayout_4.addWidget(self.update_btn, 0, 1, 1, 1)
        self.search_btn = QtWidgets.QPushButton(parent=self.functio_frame)
        self.search_btn.setStyleSheet("background-color: rgb(0, 85, 127);\n"
"background-color: rgb(0, 170, 255);")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("img/search-file-svgrepo-com.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.search_btn.setIcon(icon3)
        self.search_btn.setObjectName("search_btn")
        self.gridLayout_4.addWidget(self.search_btn, 0, 3, 1, 1)
        self.clear_btn = QtWidgets.QPushButton(parent=self.functio_frame)
        self.clear_btn.setStyleSheet("background-color: rgb(170, 0, 0);")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("img/clear-all-svgrepo-com.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.clear_btn.setIcon(icon4)
        self.clear_btn.setObjectName("clear_btn")
        self.gridLayout_4.addWidget(self.clear_btn, 0, 4, 1, 1)
        self.delete_btn = QtWidgets.QPushButton(parent=self.functio_frame)
        self.delete_btn.setStyleSheet("background-color: rgb(255, 0, 0);")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("img/delete-svgrepo-com.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.delete_btn.setIcon(icon5)
        self.delete_btn.setObjectName("delete_btn")
        self.gridLayout_4.addWidget(self.delete_btn, 0, 5, 1, 1)
        self.result_frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.result_frame.setGeometry(QtCore.QRect(70, 350, 981, 371))
        self.result_frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.result_frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.result_frame.setObjectName("result_frame")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.result_frame)
        self.gridLayout_5.setContentsMargins(20, 10, 20, -1)
        self.gridLayout_5.setVerticalSpacing(15)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.result_frame)
        self.tableWidget.setStyleSheet("QHeaderView::{\n"
"border:none;\n"
"boder-bottom:1px solid #d0c6ff;\n"
"text-align:left;\n"
"padding:3px 5px}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        self.gridLayout_5.addWidget(self.tableWidget, 0, 0, 1, 1)
        self.load_data()
        self.tableWidget.cellDoubleClicked.connect(self.on_cell_double_clicked)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.clear_btn.clicked.connect(self.clear_field)
        self.add_btn.clicked.connect(self.add_employee)
        self.update_btn.clicked.connect(self.update_employee)
        self.delete_btn.clicked.connect(self.delete_employee)
        self.search_btn.clicked.connect(self.search_employee)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.title_label.setText(_translate("MainWindow", "Employee Mangement System"))
        self.label_8.setText(_translate("MainWindow", "id"))
        self.label_2.setText(_translate("MainWindow", "Name"))
        self.label_3.setText(_translate("MainWindow", "DOJ"))
        self.label_4.setText(_translate("MainWindow", "Gender"))
        self.gender.setItemText(1, _translate("MainWindow", "Male"))
        self.gender.setItemText(2, _translate("MainWindow", "Female"))
        self.gender.setItemText(3, _translate("MainWindow", "Other"))
        self.label_5.setText(_translate("MainWindow", "Mobile"))
        self.label_6.setText(_translate("MainWindow", "Designation"))
        self.label_7.setText(_translate("MainWindow", "Department"))
        self.department.setItemText(1, _translate("MainWindow", "IT"))
        self.department.setItemText(2, _translate("MainWindow", "Account"))
        self.department.setItemText(3, _translate("MainWindow", "Sales"))
        self.department.setItemText(4, _translate("MainWindow", "HR"))
        self.add_btn.setText(_translate("MainWindow", "ADD"))
        self.update_btn.setText(_translate("MainWindow", "Update"))
        self.search_btn.setText(_translate("MainWindow", "Search"))
        self.clear_btn.setText(_translate("MainWindow", "Clear"))
        self.delete_btn.setText(_translate("MainWindow", "Delete"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Name"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "DOJ"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Gender"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Mobile"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Designation"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Department"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Experience"))
# clear button 
    def clear_field(self):  
        self.id.clear()
        self.name.clear() 
        self.mobile.clear() 
        self.gender.setCurrentText("")
        self.department.setCurrentText("")
        self.designation.clear()
        self.doj.clear()

    def update_employee(self):
        id = self.id.text()
        name = self.name.text()
        mobile = self.mobile.text()
        gender = self.gender.currentText()
        department = self.department.currentText()
        designation = self.designation.text()
        doj = self.doj.text()
        
        if name == "" or mobile == "" or gender == "" or department == "" or designation == "" or doj == "":
            QtWidgets.QMessageBox.critical(None, 'Error', 'Please fill all fields')
            return

        # Database connection parameters
        
        server = 'ALOK\\SQLEXPRESS'
        database = 'alokdb'
        try:
            connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};Trusted_Connection=yes;"
            conn = pyodbc.connect(connection_string)
            cursor = conn.cursor()
            
            
            update_query = "UPDATE employe SET name=?, mobile=?, gender=?, department=?, designation=?, doj=? WHERE id="+id
            cursor.execute(update_query, (name, mobile, gender, department, designation, doj))
            conn.commit()

            QtWidgets.QMessageBox.information(None, 'EMP Update', 'Data Update successful!')
            self.clear_field()
            self.load_data()

        except pyodbc.Error as e:
            QtWidgets.QMessageBox.critical(None, 'Database Error', f'An error occurred: {str(e)}')

        finally:
        # Close the database connection
         if cursor:
            cursor.close()
         if conn:
            conn.close()

            # Delete employee
    def delete_employee(self):
        id = self.id.text()
        server = 'ALOK\\SQLEXPRESS'
        database = 'alokdb'
        
        
        try:
            connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};Trusted_Connection=yes;"
            conn = pyodbc.connect(connection_string)
            cursor = conn.cursor()

        # Delete query
            delete_query = "DELETE FROM employe WHERE id="+id
            cursor.execute(delete_query)
            conn.commit()

            QtWidgets.QMessageBox.information(None, 'EMP Delete', 'Data Delete successful!')
            self.clear_field()
            self.load_data()

        except pyodbc.Error as e:
            QtWidgets.QMessageBox.critical(None, 'Database Error', f'An error occurred: {str(e)}')

        finally:
        # Close the database connection
         if cursor:
            cursor.close()
         if conn:
            conn.close()


      # Add employee   
    def add_employee(self):
        name = self.name.text()
        doj = self.doj.text()
        gender = self.gender.currentText()
        mobile = self.mobile.text()
        designation = self.designation.text()
        department = self.department.currentText()


        if name == "" or mobile == "" or gender == "" or department == "" or designation == "" or doj == "" :
            QtWidgets.QMessageBox.critical(None, 'Error', 'Please fill all fields')
            return
       
        
        # Database connection parameters
        server = 'ALOK\\SQLEXPRESS'
        database = 'alokdb'
        
        try:
            # Establish connection to the database
            connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};Trusted_Connection=yes;"
            conn = pyodbc.connect(connection_string)
            cursor = conn.cursor()
            insert_query = "INSERT INTO employe (name, mobile, gender, department, designation, doj) VALUES (?, ?, ?, ?, ?, ?)"
            cursor.execute(insert_query, (name, mobile, gender, department, designation, doj))
            conn.commit()
            QtWidgets.QMessageBox.information(None, ' EMP Registration', 'Data Insert successful!')
            self.clear_field()
            self.load_data()
        
        except pyodbc.Error as e:
            QtWidgets.QMessageBox.critical(None, 'Database Error', f'An error occurred: {str(e)}')
        
        finally:
            # Close the database connection
            if cursor:
                cursor.close()
            if conn:
                conn.close() 

                # search employee
    def search_employee(self):
        name = self.name.text()
        mobile = self.mobile.text()
        gender = self.gender.currentText()
        department = self.department.currentText()
        designation = self.designation.text()


    # Database connection parameters
        server = 'ALOK\\SQLEXPRESS'
        database = 'alokdb'
        try:
            connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};Trusted_Connection=yes;"
            conn = pyodbc.connect(connection_string)
            cursor = conn.cursor()

        # Start building the query
            query = "SELECT * FROM employe WHERE 1=1"
            params = []

        # Append conditions based on provided inputs
            if name:
                query += " AND name LIKE ?"
                params.append(f"%{name}%")
            if mobile:
                query += " AND mobile LIKE ?"
                params.append(f"%{mobile}%")
            if gender:
                query += " AND gender = ?"
                params.append(gender)
            if department:
               query += " AND department = ?"
               params.append(department)
            if designation:
               query += " AND designation LIKE ?"
               params.append(f"%{designation}%")
           

            cursor.execute(query, params)
            rows = cursor.fetchall()

    

        # Insert the search results into the table
            self.tableWidget.setRowCount(len(rows))
            for row_idx, row in enumerate(rows):
                for col_idx, cell in enumerate(row):
                    self.tableWidget.setItem(row_idx, col_idx, QTableWidgetItem(str(cell)))

        except pyodbc.Error as e:
            QtWidgets.QMessageBox.critical(None, 'Database Error', f'An error occurred: {str(e)}')

        finally:
        # Close the database connection
         if cursor:
            cursor.close()
         if conn:
            conn.close()



#load a table data
    def load_data(self):
        columns, rows = fetch_data()
        self.tableWidget.setColumnCount(len(columns))
        self.tableWidget.setRowCount(len(rows))
        self.tableWidget.setHorizontalHeaderLabels(columns)

        for row_idx, row in enumerate(rows):
            for col_idx, cell in enumerate(row):
                self.tableWidget.setItem(row_idx, col_idx, QTableWidgetItem(str(cell)))

    def on_cell_double_clicked(self, row, column):
        # Get the data for the clicked row
        item_id = self.tableWidget.item(row, 0).text()
        item_name = self.tableWidget.item(row, 1).text()
        item_doj = self.tableWidget.item(row, 2).text()
        item_gender = self.tableWidget.item(row, 3).text()
        item_mobile = self.tableWidget.item(row, 4).text()
        item_designation = self.tableWidget.item(row, 5).text()
        item_department = self.tableWidget.item(row, 6).text()

        # Populate form fields with the data
        self.id.setText(item_id)
        self.name.setText(item_name)
        self.mobile.setText(item_mobile)
        self.gender.setCurrentText(item_gender)
        
        self.department.setCurrentText(item_department)
        self.designation.setText(item_designation)
        self.doj.setDate(QtCore.QDate.fromString(item_doj, 'yyyy-MM-dd'))  

def fetch_data():
        server = 'ALOK\\SQLEXPRESS'
        database = 'alokdb'
        conn = pyodbc.connect(f"DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};Trusted_Connection=yes;")
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM employe")
        rows = cursor.fetchall()
        columns = [column[0] for column in cursor.description]
        return columns, rows
   
   #     def update_employee(self):#update button
   
               
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
